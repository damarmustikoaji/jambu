name: Deployment
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  COBAPI_URL: ${{ secrets.COBAPI_URL }}
  HOST: ${{ secrets.CLEAR_DB_HOST }}
  USERNAME: ${{ secrets.CLEAR_DB_USERNAME }}
  PASSWORD: ${{ secrets.CLEAR_DB_PASSWORD }}
  DATABASE: ${{ secrets.CLEAR_DB_DATABASE }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_API_NAME}} #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_API_EMAIL}}
          env_file: ".env"
        env:
          HOST: ${{secrets.HOST}}
          USERNAME: ${{secrets.USERNAME}}
          PASSWORD: ${{secrets.PASSWORD}}
          DATABASE: ${{secrets.DATABASE}}
  test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/checkout@v2
      - name: Set up testing
        uses: actions/checkout@v2
        with:
          repository: damarmustikoaji/durian
          token: ${{secrets.JAMBHU}}
      - name: npm cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/lock.json') }}
      - name: Installing
        run: npm install
      - name: Testing
        run: npm run test-api
      - name: Reporting
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Reports
          path: reports
  alert:
      needs: deploy
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Check Health
          run: curl --location --request GET '${{secrets.COBAPI_URL}}/v1/ping'
